// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Invert.ECS.Graphs {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using Invert.Core.GraphDesigner;
    
    
    public class EntityNodeDrawerBase : GenericNodeDrawer<EntityNode,EntityNodeViewModel> {
        
        public EntityNodeDrawerBase(EntityNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class ComponentNodeDrawerBase : GenericNodeDrawer<ComponentNode,ComponentNodeViewModel> {
        
        public ComponentNodeDrawerBase(ComponentNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class SystemNodeDrawerBase : GenericNodeDrawer<SystemNode,SystemNodeViewModel> {
        
        public SystemNodeDrawerBase(SystemNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class ServerSystemNodeDrawerBase : GenericNodeDrawer<ServerSystemNode,ServerSystemNodeViewModel> {
        
        public ServerSystemNodeDrawerBase(ServerSystemNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class UnitySystemNodeDrawerBase : GenericNodeDrawer<UnitySystemNode,UnitySystemNodeViewModel> {
        
        public UnitySystemNodeDrawerBase(UnitySystemNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class SystemsNodeDrawerBase : GenericNodeDrawer<SystemsNode,SystemsNodeViewModel> {
        
        public SystemsNodeDrawerBase(SystemsNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class EntitiesNodeDrawerBase : GenericNodeDrawer<EntitiesNode,EntitiesNodeViewModel> {
        
        public EntitiesNodeDrawerBase(EntitiesNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class EventNodeDrawerBase : GenericNodeDrawer<EventNode,EventNodeViewModel> {
        
        public EventNodeDrawerBase(EventNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class CommandNodeDrawerBase : GenericNodeDrawer<CommandNode,CommandNodeViewModel> {
        
        public CommandNodeDrawerBase(CommandNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class EventHandlerNodeDrawerBase : GenericNodeDrawer<EventHandlerNode,EventHandlerNodeViewModel> {
        
        public EventHandlerNodeDrawerBase(EventHandlerNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class SendSignalNodeDrawerBase : GenericNodeDrawer<SendSignalNode,SendSignalNodeViewModel> {
        
        public SendSignalNodeDrawerBase(SendSignalNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class ActionNodeDrawerBase : GenericNodeDrawer<ActionNode,ActionNodeViewModel> {
        
        public ActionNodeDrawerBase(ActionNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class CustomActionNodeDrawerBase : GenericNodeDrawer<CustomActionNode,CustomActionNodeViewModel> {
        
        public CustomActionNodeDrawerBase(CustomActionNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class VariableNodeDrawerBase : GenericNodeDrawer<VariableNode,VariableNodeViewModel> {
        
        public VariableNodeDrawerBase(VariableNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class ConditionNodeDrawerBase : GenericNodeDrawer<ConditionNode,ConditionNodeViewModel> {
        
        public ConditionNodeDrawerBase(ConditionNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class IsTrueNodeDrawerBase : GenericNodeDrawer<IsTrueNode,IsTrueNodeViewModel> {
        
        public IsTrueNodeDrawerBase(IsTrueNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class IsFalseNodeDrawerBase : GenericNodeDrawer<IsFalseNode,IsFalseNodeViewModel> {
        
        public IsFalseNodeDrawerBase(IsFalseNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class LoopNodeDrawerBase : GenericNodeDrawer<LoopNode,LoopNodeViewModel> {
        
        public LoopNodeDrawerBase(LoopNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class StateMachineNodeDrawerBase : GenericNodeDrawer<StateMachineNode,StateMachineNodeViewModel> {
        
        public StateMachineNodeDrawerBase(StateMachineNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class StateNodeDrawerBase : GenericNodeDrawer<StateNode,StateNodeViewModel> {
        
        public StateNodeDrawerBase(StateNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
}
