// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace FlipCube {
    using FlipCube;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using uFrame.Kernel;
    using UniRx;
    using UnityEngine;
    
    
    public partial class TeliporterPlateSystemBase : uFrame.ECS.EcsSystem {
        
        private IEcsComponentManagerOf<TeliporterPlate> _TeliporterPlateManager;
        
        private IEcsComponentManagerOf<PlayerRoller> _PlayerRollerManager;
        
        public IEcsComponentManagerOf<TeliporterPlate> TeliporterPlateManager {
            get {
                return _TeliporterPlateManager;
            }
            set {
                _TeliporterPlateManager = value;
            }
        }
        
        public IEcsComponentManagerOf<PlayerRoller> PlayerRollerManager {
            get {
                return _PlayerRollerManager;
            }
            set {
                _PlayerRollerManager = value;
            }
        }
        
        public override void Setup() {
            base.Setup();
            TeliporterPlateManager = ComponentSystem.RegisterComponent<TeliporterPlate>(44);
            PlayerRollerManager = ComponentSystem.RegisterGroup<PlayerRollerGroup,PlayerRoller>();
            this.OnEvent<FlipCube.RollCompleteStandingUp>().Subscribe(_=>{ TeliporterPlateSystemRollCompleteStandingUpFilter(_); }).DisposeWith(this);
            this.OnEvent<FlipCube.TeliportRoller>().Subscribe(_=>{ TeliportFilter(_); }).DisposeWith(this);
        }
        
        protected virtual void TeliporterPlateSystemRollCompleteStandingUpHandler(FlipCube.RollCompleteStandingUp data, TeliporterPlate plate, PlayerRoller player) {
            var handler = new TeliporterPlateSystemRollCompleteStandingUpHandler();
            handler.System = this;
            handler.Event = data;
            handler.Plate = plate;
            handler.Player = player;
            StartCoroutine(handler.Execute());
        }
        
        protected void TeliporterPlateSystemRollCompleteStandingUpFilter(FlipCube.RollCompleteStandingUp data) {
            var PlateTeliporterPlate = TeliporterPlateManager[data.Plate];
            if (PlateTeliporterPlate == null) {
                return;
            }
            if (!PlateTeliporterPlate.Enabled) {
                return;
            }
            var PlayerItem = PlayerRollerManager[data.Player];
            if (PlayerItem == null) {
                return;
            }
            if (!PlayerItem.Enabled) {
                return;
            }
            this.TeliporterPlateSystemRollCompleteStandingUpHandler(data, PlateTeliporterPlate, PlayerItem);
        }
        
        protected virtual void TeliportHandler(FlipCube.TeliportRoller data) {
        }
        
        protected void TeliportFilter(FlipCube.TeliportRoller data) {
            this.TeliportHandler(data);
        }
    }
    
    [uFrame.Attributes.uFrameIdentifier("818f0299-3952-4f02-9719-65ad55e74b39")]
    public partial class TeliporterPlateSystem : TeliporterPlateSystemBase {
        
        private static TeliporterPlateSystem _Instance;
        
        public TeliporterPlateSystem() {
            Instance = this;
        }
        
        public static TeliporterPlateSystem Instance {
            get {
                return _Instance;
            }
            set {
                _Instance = value;
            }
        }
    }
}
