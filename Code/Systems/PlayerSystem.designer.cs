// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace FlipCube {
    using FlipCube;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using uFrame.Kernel;
    using UniRx;
    
    
    public partial class PlayerSystemBase : uFrame.ECS.EcsSystem {
        
        private IEcsComponentManagerOf<PlayerRoller> _PlayerRollerManager;
        
        private IEcsComponentManagerOf<Player> _PlayerManager;
        
        private IEcsComponentManagerOf<PlayerStandingUp> _PlayerStandingUpManager;
        
        public IEcsComponentManagerOf<PlayerRoller> PlayerRollerManager {
            get {
                return _PlayerRollerManager;
            }
            set {
                _PlayerRollerManager = value;
            }
        }
        
        public IEcsComponentManagerOf<Player> PlayerManager {
            get {
                return _PlayerManager;
            }
            set {
                _PlayerManager = value;
            }
        }
        
        public IEcsComponentManagerOf<PlayerStandingUp> PlayerStandingUpManager {
            get {
                return _PlayerStandingUpManager;
            }
            set {
                _PlayerStandingUpManager = value;
            }
        }
        
        public override void Setup() {
            base.Setup();
            PlayerRollerManager = ComponentSystem.RegisterGroup<PlayerRollerGroup,PlayerRoller>();
            PlayerManager = ComponentSystem.RegisterComponent<Player>(26);
            PlayerStandingUpManager = ComponentSystem.RegisterGroup<PlayerStandingUpGroup,PlayerStandingUp>();
            this.OnEvent<FlipCube.LevelReset>().Subscribe(_=>{ ResetPlayerFilter(_); }).DisposeWith(this);
        }
        
        protected virtual void ResetPlayerHandler(FlipCube.LevelReset data, PlayerRoller group) {
            var handler = new ResetPlayerHandler();
            handler.System = this;
            handler.Event = data;
            handler.Group = group;
            handler.Execute();
        }
        
        protected void ResetPlayerFilter(FlipCube.LevelReset data) {
            var PlayerRollerItems = PlayerRollerManager.Components;
            for (var PlayerRollerIndex = 0
            ; PlayerRollerIndex < PlayerRollerItems.Count; PlayerRollerIndex++
            ) {
                if (!PlayerRollerItems[PlayerRollerIndex].Enabled) {
                    continue;
                }
                this.ResetPlayerHandler(data, PlayerRollerItems[PlayerRollerIndex]);
            }
        }
    }
    
    [uFrame.Attributes.uFrameIdentifier("87897a6b-e56c-43d5-9e83-f6b56adf8524")]
    public partial class PlayerSystem : PlayerSystemBase {
        
        private static PlayerSystem _Instance;
        
        public PlayerSystem() {
            Instance = this;
        }
        
        public static PlayerSystem Instance {
            get {
                return _Instance;
            }
            set {
                _Instance = value;
            }
        }
    }
}
