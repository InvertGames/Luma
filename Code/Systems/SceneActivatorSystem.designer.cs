// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace FlipCube {
    using FlipCube;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using uFrame.Kernel;
    using UniRx;
    using UnityEngine;
    
    
    public partial class SceneActivatorSystemBase : uFrame.ECS.EcsSystem {
        
        private IEcsComponentManagerOf<UserLoginInfo> _UserLoginInfoManager;
        
        private IEcsComponentManagerOf<SceneData> _SceneDataManager;
        
        private IEcsComponentManagerOf<GameDependencySceneData> _GameDependencySceneDataManager;
        
        private IEcsComponentManagerOf<SceneInstance> _SceneInstanceManager;
        
        private IEcsComponentManagerOf<SwitchPlate> _SwitchPlateManager;
        
        private IEcsComponentManagerOf<FlipCubeSounds> _FlipCubeSoundsManager;
        
        private IEcsComponentManagerOf<GameDependency> _GameDependencyManager;
        
        public IEcsComponentManagerOf<UserLoginInfo> UserLoginInfoManager {
            get {
                return _UserLoginInfoManager;
            }
            set {
                _UserLoginInfoManager = value;
            }
        }
        
        public IEcsComponentManagerOf<SceneData> SceneDataManager {
            get {
                return _SceneDataManager;
            }
            set {
                _SceneDataManager = value;
            }
        }
        
        public IEcsComponentManagerOf<GameDependencySceneData> GameDependencySceneDataManager {
            get {
                return _GameDependencySceneDataManager;
            }
            set {
                _GameDependencySceneDataManager = value;
            }
        }
        
        public IEcsComponentManagerOf<SceneInstance> SceneInstanceManager {
            get {
                return _SceneInstanceManager;
            }
            set {
                _SceneInstanceManager = value;
            }
        }
        
        public IEcsComponentManagerOf<SwitchPlate> SwitchPlateManager {
            get {
                return _SwitchPlateManager;
            }
            set {
                _SwitchPlateManager = value;
            }
        }
        
        public IEcsComponentManagerOf<FlipCubeSounds> FlipCubeSoundsManager {
            get {
                return _FlipCubeSoundsManager;
            }
            set {
                _FlipCubeSoundsManager = value;
            }
        }
        
        public IEcsComponentManagerOf<GameDependency> GameDependencyManager {
            get {
                return _GameDependencyManager;
            }
            set {
                _GameDependencyManager = value;
            }
        }
        
        public override void Setup() {
            base.Setup();
            UserLoginInfoManager = ComponentSystem.RegisterComponent<UserLoginInfo>(23);
            SceneDataManager = ComponentSystem.RegisterComponent<SceneData>(94);
            GameDependencySceneDataManager = ComponentSystem.RegisterGroup<GameDependencySceneDataGroup,GameDependencySceneData>();
            SceneInstanceManager = ComponentSystem.RegisterComponent<SceneInstance>(95);
            SwitchPlateManager = ComponentSystem.RegisterComponent<SwitchPlate>(45);
            FlipCubeSoundsManager = ComponentSystem.RegisterComponent<FlipCubeSounds>(48);
            GameDependencyManager = ComponentSystem.RegisterComponent<GameDependency>(96);
            SceneDataManager.CreatedObservable.Subscribe(SceneDataCreatedFilter).DisposeWith(this);
            SceneInstanceManager.CreatedObservable.Subscribe(SceneInstanceCreatedFilter).DisposeWith(this);
            UserLoginInfoManager.CreatedObservable.Subscribe(UserLoginInfoCreatedFilter).DisposeWith(this);
            SceneInstanceManager.RemovedObservable.Subscribe(_=>SceneInstanceComponentDestroyed(_,_)).DisposeWith(this);
            this.OnEvent<FlipCube.ConstructScene>().Subscribe(_=>{ SceneActivatorSystemConstructSceneFilter(_); }).DisposeWith(this);
            GameDependencySceneDataManager.CreatedObservable.Subscribe(GameDependencySceneDataCreatedFilter).DisposeWith(this);
            this.OnEvent<FlipCube.DeconstructScene>().Subscribe(_=>{ SceneActivatorSystemDeconstructSceneFilter(_); }).DisposeWith(this);
            this.OnEvent<FlipCube.ExchangeScenes>().Subscribe(_=>{ SceneActivatorSystemExchangeScenesFilter(_); }).DisposeWith(this);
            SwitchPlateManager.CreatedObservable.Subscribe(SwitchTemplateCreatedFilter).DisposeWith(this);
            FlipCubeSoundsManager.CreatedObservable.Subscribe(NewComponentCreatedNodeFilter).DisposeWith(this);
        }
        
        protected virtual void SceneDataCreated(SceneData data, SceneData group) {
        }
        
        protected void SceneDataCreatedFilter(SceneData data) {
            var GroupSceneData = SceneDataManager[data.EntityId];
            if (GroupSceneData == null) {
                return;
            }
            if (!GroupSceneData.Enabled) {
                return;
            }
            this.SceneDataCreated(data, GroupSceneData);
        }
        
        protected virtual void SceneInstanceCreated(SceneInstance data, SceneInstance group) {
        }
        
        protected void SceneInstanceCreatedFilter(SceneInstance data) {
            var GroupSceneInstance = SceneInstanceManager[data.EntityId];
            if (GroupSceneInstance == null) {
                return;
            }
            if (!GroupSceneInstance.Enabled) {
                return;
            }
            this.SceneInstanceCreated(data, GroupSceneInstance);
        }
        
        protected virtual void UserLoginInfoCreated(UserLoginInfo data, UserLoginInfo group) {
        }
        
        protected void UserLoginInfoCreatedFilter(UserLoginInfo data) {
            var GroupUserLoginInfo = UserLoginInfoManager[data.EntityId];
            if (GroupUserLoginInfo == null) {
                return;
            }
            if (!GroupUserLoginInfo.Enabled) {
                return;
            }
            this.UserLoginInfoCreated(data, GroupUserLoginInfo);
        }
        
        protected virtual void SceneInstanceComponentDestroyed(SceneInstance data, SceneInstance group) {
        }
        
        protected void SceneInstanceComponentDestroyedFilter(SceneInstance data) {
            var GroupSceneInstance = SceneInstanceManager[data.EntityId];
            if (GroupSceneInstance == null) {
                return;
            }
            if (!GroupSceneInstance.Enabled) {
                return;
            }
            this.SceneInstanceComponentDestroyed(data, GroupSceneInstance);
        }
        
        protected virtual void SceneActivatorSystemConstructSceneHandler(FlipCube.ConstructScene data, SceneData scenedata) {
        }
        
        protected void SceneActivatorSystemConstructSceneFilter(FlipCube.ConstructScene data) {
            var SceneDataSceneData = SceneDataManager[data.SceneData];
            if (SceneDataSceneData == null) {
                return;
            }
            if (!SceneDataSceneData.Enabled) {
                return;
            }
            this.SceneActivatorSystemConstructSceneHandler(data, SceneDataSceneData);
        }
        
        protected virtual void GameDependencySceneDataCreated(GameDependencySceneData data, GameDependencySceneData group) {
        }
        
        protected void GameDependencySceneDataCreatedFilter(GameDependencySceneData data) {
            var GroupItem = GameDependencySceneDataManager[data.EntityId];
            if (GroupItem == null) {
                return;
            }
            if (!GroupItem.Enabled) {
                return;
            }
            this.GameDependencySceneDataCreated(data, GroupItem);
        }
        
        protected virtual void SceneActivatorSystemDeconstructSceneHandler(FlipCube.DeconstructScene data, SceneInstance sceneinstance) {
        }
        
        protected void SceneActivatorSystemDeconstructSceneFilter(FlipCube.DeconstructScene data) {
            var SceneInstanceSceneInstance = SceneInstanceManager[data.SceneInstance];
            if (SceneInstanceSceneInstance == null) {
                return;
            }
            if (!SceneInstanceSceneInstance.Enabled) {
                return;
            }
            this.SceneActivatorSystemDeconstructSceneHandler(data, SceneInstanceSceneInstance);
        }
        
        protected virtual void SceneActivatorSystemExchangeScenesHandler(FlipCube.ExchangeScenes data, SceneInstance unload, SceneData load) {
        }
        
        protected void SceneActivatorSystemExchangeScenesFilter(FlipCube.ExchangeScenes data) {
            var UnloadSceneInstance = SceneInstanceManager[data.Unload];
            if (UnloadSceneInstance == null) {
                return;
            }
            if (!UnloadSceneInstance.Enabled) {
                return;
            }
            var LoadSceneData = SceneDataManager[data.Load];
            if (LoadSceneData == null) {
                return;
            }
            if (!LoadSceneData.Enabled) {
                return;
            }
            this.SceneActivatorSystemExchangeScenesHandler(data, UnloadSceneInstance, LoadSceneData);
        }
        
        protected virtual void SwitchTemplateCreated(SwitchPlate data, SwitchPlate group) {
        }
        
        protected void SwitchTemplateCreatedFilter(SwitchPlate data) {
            var GroupSwitchPlate = SwitchPlateManager[data.EntityId];
            if (GroupSwitchPlate == null) {
                return;
            }
            if (!GroupSwitchPlate.Enabled) {
                return;
            }
            this.SwitchTemplateCreated(data, GroupSwitchPlate);
        }
        
        protected virtual void NewComponentCreatedNode(FlipCubeSounds data, FlipCubeSounds group) {
        }
        
        protected void NewComponentCreatedNodeFilter(FlipCubeSounds data) {
            var GroupFlipCubeSounds = FlipCubeSoundsManager[data.EntityId];
            if (GroupFlipCubeSounds == null) {
                return;
            }
            if (!GroupFlipCubeSounds.Enabled) {
                return;
            }
            this.NewComponentCreatedNode(data, GroupFlipCubeSounds);
        }
    }
    
    [uFrame.Attributes.uFrameIdentifier("2a803dc9-757f-4430-a0ea-413ae8348ad9")]
    public partial class SceneActivatorSystem : SceneActivatorSystemBase {
        
        private static SceneActivatorSystem _Instance;
        
        public SceneActivatorSystem() {
            Instance = this;
        }
        
        public static SceneActivatorSystem Instance {
            get {
                return _Instance;
            }
            set {
                _Instance = value;
            }
        }
    }
}
