// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace FlipCube {
    using FlipCube;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using uFrame.Kernel;
    using UniRx;
    using UnityEngine;
    
    
    public partial class LoadingScreenUISystemBase : uFrame.ECS.EcsSystem {
        
        private IEcsComponentManagerOf<LoadingScreenWidget> _LoadingScreenWidgetManager;
        
        private IEcsComponentManagerOf<LoadingScreenUI> _LoadingScreenUIManager;
        
        public IEcsComponentManagerOf<LoadingScreenWidget> LoadingScreenWidgetManager {
            get {
                return _LoadingScreenWidgetManager;
            }
            set {
                _LoadingScreenWidgetManager = value;
            }
        }
        
        public IEcsComponentManagerOf<LoadingScreenUI> LoadingScreenUIManager {
            get {
                return _LoadingScreenUIManager;
            }
            set {
                _LoadingScreenUIManager = value;
            }
        }
        
        public override void Setup() {
            base.Setup();
            LoadingScreenWidgetManager = ComponentSystem.RegisterGroup<LoadingScreenWidgetGroup,LoadingScreenWidget>();
            LoadingScreenUIManager = ComponentSystem.RegisterComponent<LoadingScreenUI>(92);
            this.PropertyChangedEvent<LoadingScreenWidget,System.Single>(Group=>Group.LoadingScreenUI.ProgressObservable, LoadingScreenProgressChangedFilter, Group=>Group.LoadingScreenUI.Progress, false);
            this.PropertyChangedEvent<LoadingScreenWidget,System.String>(Group=>Group.LoadingScreenUI.MessageObservable, LoadingScreenMessageChangedFilter, null, false);
        }
        
        protected virtual void LoadingScreenProgressChanged(LoadingScreenWidget data, LoadingScreenWidget group, PropertyChangedEvent<System.Single> value) {
        }
        
        protected void LoadingScreenProgressChangedFilter(LoadingScreenWidget data, PropertyChangedEvent<System.Single> value) {
            var GroupItem = LoadingScreenWidgetManager[data.EntityId];
            if (GroupItem == null) {
                return;
            }
            if (!GroupItem.Enabled) {
                return;
            }
            this.LoadingScreenProgressChanged(data, GroupItem, value);
        }
        
        protected virtual void LoadingScreenMessageChanged(LoadingScreenWidget data, LoadingScreenWidget group, PropertyChangedEvent<System.String> value) {
        }
        
        protected void LoadingScreenMessageChangedFilter(LoadingScreenWidget data, PropertyChangedEvent<System.String> value) {
            var GroupItem = LoadingScreenWidgetManager[data.EntityId];
            if (GroupItem == null) {
                return;
            }
            if (!GroupItem.Enabled) {
                return;
            }
            this.LoadingScreenMessageChanged(data, GroupItem, value);
        }
    }
    
    [uFrame.Attributes.uFrameIdentifier("c3a169bf-4484-42dd-aa11-9678e6ae0bdb")]
    public partial class LoadingScreenUISystem : LoadingScreenUISystemBase {
        
        private static LoadingScreenUISystem _Instance;
        
        public LoadingScreenUISystem() {
            Instance = this;
        }
        
        public static LoadingScreenUISystem Instance {
            get {
                return _Instance;
            }
            set {
                _Instance = value;
            }
        }
    }
}
