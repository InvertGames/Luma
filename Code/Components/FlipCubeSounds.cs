// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace FlipCube {
    using FlipCube;
    using Invert.Json;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using UniRx;
    using UnityEngine;
    
    
    [uFrame.Attributes.ComponentId(48)]
    [uFrame.Attributes.uFrameIdentifier("68ddcc16-0e62-4050-9963-1208080eebf5")]
    public partial class FlipCubeSounds : uFrame.ECS.EcsComponent, uFrame.ECS.IBlackBoardComponent {
        
        [UnityEngine.SerializeField()]
        private UnityEngine.AudioSource _LevelFailedSound;
        
        [UnityEngine.SerializeField()]
        private UnityEngine.AudioSource _RollCompleteSound;
        
        [UnityEngine.SerializeField()]
        private UnityEngine.AudioSource _LevelResetSound;
        
        [UnityEngine.SerializeField()]
        private UnityEngine.AudioSource _LevelCompleteSound;
        
        [UnityEngine.SerializeField()]
        private UnityEngine.AudioSource _MoveSound;
        
        [UnityEngine.SerializeField()]
        private UnityEngine.AudioSource _RollStartSound;
        
        [UnityEngine.SerializeField()]
        private UnityEngine.AudioSource[] _Songs;
        
        private ReactiveCollection<UnityEngine.AudioSource> _SongsReactive;
        
        private Subject<PropertyChangedEvent<UnityEngine.AudioSource>> _LevelFailedSoundObservable;
        
        private PropertyChangedEvent<UnityEngine.AudioSource> _LevelFailedSoundEvent;
        
        private Subject<PropertyChangedEvent<UnityEngine.AudioSource>> _RollCompleteSoundObservable;
        
        private PropertyChangedEvent<UnityEngine.AudioSource> _RollCompleteSoundEvent;
        
        private Subject<PropertyChangedEvent<UnityEngine.AudioSource>> _LevelResetSoundObservable;
        
        private PropertyChangedEvent<UnityEngine.AudioSource> _LevelResetSoundEvent;
        
        private Subject<PropertyChangedEvent<UnityEngine.AudioSource>> _LevelCompleteSoundObservable;
        
        private PropertyChangedEvent<UnityEngine.AudioSource> _LevelCompleteSoundEvent;
        
        private Subject<PropertyChangedEvent<UnityEngine.AudioSource>> _MoveSoundObservable;
        
        private PropertyChangedEvent<UnityEngine.AudioSource> _MoveSoundEvent;
        
        private Subject<PropertyChangedEvent<UnityEngine.AudioSource>> _RollStartSoundObservable;
        
        private PropertyChangedEvent<UnityEngine.AudioSource> _RollStartSoundEvent;
        
        public override int ComponentId {
            get {
                return 48;
            }
        }
        
        public IObservable<PropertyChangedEvent<UnityEngine.AudioSource>> LevelFailedSoundObservable {
            get {
                return _LevelFailedSoundObservable ?? (_LevelFailedSoundObservable = new Subject<PropertyChangedEvent<UnityEngine.AudioSource>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<UnityEngine.AudioSource>> RollCompleteSoundObservable {
            get {
                return _RollCompleteSoundObservable ?? (_RollCompleteSoundObservable = new Subject<PropertyChangedEvent<UnityEngine.AudioSource>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<UnityEngine.AudioSource>> LevelResetSoundObservable {
            get {
                return _LevelResetSoundObservable ?? (_LevelResetSoundObservable = new Subject<PropertyChangedEvent<UnityEngine.AudioSource>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<UnityEngine.AudioSource>> LevelCompleteSoundObservable {
            get {
                return _LevelCompleteSoundObservable ?? (_LevelCompleteSoundObservable = new Subject<PropertyChangedEvent<UnityEngine.AudioSource>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<UnityEngine.AudioSource>> MoveSoundObservable {
            get {
                return _MoveSoundObservable ?? (_MoveSoundObservable = new Subject<PropertyChangedEvent<UnityEngine.AudioSource>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<UnityEngine.AudioSource>> RollStartSoundObservable {
            get {
                return _RollStartSoundObservable ?? (_RollStartSoundObservable = new Subject<PropertyChangedEvent<UnityEngine.AudioSource>>());
            }
        }
        
        public UnityEngine.AudioSource LevelFailedSound {
            get {
                return _LevelFailedSound;
            }
            set {
                SetLevelFailedSound(value);
            }
        }
        
        public UnityEngine.AudioSource RollCompleteSound {
            get {
                return _RollCompleteSound;
            }
            set {
                SetRollCompleteSound(value);
            }
        }
        
        public UnityEngine.AudioSource LevelResetSound {
            get {
                return _LevelResetSound;
            }
            set {
                SetLevelResetSound(value);
            }
        }
        
        public UnityEngine.AudioSource LevelCompleteSound {
            get {
                return _LevelCompleteSound;
            }
            set {
                SetLevelCompleteSound(value);
            }
        }
        
        public UnityEngine.AudioSource MoveSound {
            get {
                return _MoveSound;
            }
            set {
                SetMoveSound(value);
            }
        }
        
        public UnityEngine.AudioSource RollStartSound {
            get {
                return _RollStartSound;
            }
            set {
                SetRollStartSound(value);
            }
        }
        
        public ReactiveCollection<UnityEngine.AudioSource> Songs {
            get {
                if (_SongsReactive == null) {
                    _SongsReactive = new ReactiveCollection<UnityEngine.AudioSource>(_Songs ?? new UnityEngine.AudioSource[] { });
                }
                return _SongsReactive;
            }
        }
        
        public virtual void SetLevelFailedSound(UnityEngine.AudioSource value) {
            SetProperty(ref _LevelFailedSound, value, ref _LevelFailedSoundEvent, _LevelFailedSoundObservable);
        }
        
        public virtual void SetRollCompleteSound(UnityEngine.AudioSource value) {
            SetProperty(ref _RollCompleteSound, value, ref _RollCompleteSoundEvent, _RollCompleteSoundObservable);
        }
        
        public virtual void SetLevelResetSound(UnityEngine.AudioSource value) {
            SetProperty(ref _LevelResetSound, value, ref _LevelResetSoundEvent, _LevelResetSoundObservable);
        }
        
        public virtual void SetLevelCompleteSound(UnityEngine.AudioSource value) {
            SetProperty(ref _LevelCompleteSound, value, ref _LevelCompleteSoundEvent, _LevelCompleteSoundObservable);
        }
        
        public virtual void SetMoveSound(UnityEngine.AudioSource value) {
            SetProperty(ref _MoveSound, value, ref _MoveSoundEvent, _MoveSoundObservable);
        }
        
        public virtual void SetRollStartSound(UnityEngine.AudioSource value) {
            SetProperty(ref _RollStartSound, value, ref _RollStartSoundEvent, _RollStartSoundObservable);
        }
    }
}
