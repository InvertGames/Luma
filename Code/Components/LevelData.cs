// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace FlipCube {
    using FlipCube;
    using Invert.Json;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using UniRx;
    using UnityEngine;
    
    
    [uFrame.Attributes.ComponentId(38)]
    [uFrame.Attributes.uFrameIdentifier("de233a70-9951-4951-a8eb-ac1311b45c49")]
    public partial class LevelData : uFrame.ECS.EcsComponent {
        
        [UnityEngine.SerializeField()]
        private LevelState _State;
        
        [UnityEngine.SerializeField()]
        private String[] _SceneDependencies;
        
        private ReactiveCollection<String> _SceneDependenciesReactive;
        
        private Subject<PropertyChangedEvent<LevelState>> _StateObservable;
        
        private PropertyChangedEvent<LevelState> _StateEvent;
        
        public override int ComponentId {
            get {
                return 38;
            }
        }
        
        public IObservable<PropertyChangedEvent<LevelState>> StateObservable {
            get {
                return _StateObservable ?? (_StateObservable = new Subject<PropertyChangedEvent<LevelState>>());
            }
        }
        
        public LevelState State {
            get {
                return _State;
            }
            set {
                SetState(value);
            }
        }
        
        public ReactiveCollection<String> SceneDependencies {
            get {
                if (_SceneDependenciesReactive == null) {
                    _SceneDependenciesReactive = new ReactiveCollection<String>(_SceneDependencies ?? new String[] { });
                }
                return _SceneDependenciesReactive;
            }
        }
        
        public virtual void SetState(LevelState value) {
            SetProperty(ref _State, value, ref _StateEvent, _StateObservable);
        }
    }
}
