// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace FlipCube {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.UI;
    using uFrame.ECS;
    using UniRx;
    using Invert.Json;
    
    
    [uFrame.Attributes.ComponentId(16)]
    [uFrame.Attributes.uFrameIdentifier("99d2ab32-81aa-4186-934e-212dfcd584f6")]
    public partial class DialogUI : uFrame.ECS.EcsComponent, uFrame.ECS.IBlackBoardComponent {
        
        [UnityEngine.SerializeField()]
        private Transform _ButtonsContainer;
        
        [UnityEngine.SerializeField()]
        private GameObject _ButtonPrefab;
        
        [UnityEngine.SerializeField()]
        private GameObject _UIContainer;
        
        [UnityEngine.SerializeField()]
        private Text _Header;
        
        [UnityEngine.SerializeField()]
        private Text _Message;
        
        [UnityEngine.SerializeField()]
        private Dialog[] _DialogQueue;
        
        private ReactiveCollection<Dialog> _DialogQueueReactive;
        
        private Subject<PropertyChangedEvent<Transform>> _ButtonsContainerObservable;
        
        private PropertyChangedEvent<Transform> _ButtonsContainerEvent;
        
        private Subject<PropertyChangedEvent<GameObject>> _ButtonPrefabObservable;
        
        private PropertyChangedEvent<GameObject> _ButtonPrefabEvent;
        
        private Subject<PropertyChangedEvent<GameObject>> _UIContainerObservable;
        
        private PropertyChangedEvent<GameObject> _UIContainerEvent;
        
        private Subject<PropertyChangedEvent<Text>> _HeaderObservable;
        
        private PropertyChangedEvent<Text> _HeaderEvent;
        
        private Subject<PropertyChangedEvent<Text>> _MessageObservable;
        
        private PropertyChangedEvent<Text> _MessageEvent;
        
        public override int ComponentId {
            get {
                return 16;
            }
        }
        
        public IObservable<PropertyChangedEvent<Transform>> ButtonsContainerObservable {
            get {
                return _ButtonsContainerObservable ?? (_ButtonsContainerObservable = new Subject<PropertyChangedEvent<Transform>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<GameObject>> ButtonPrefabObservable {
            get {
                return _ButtonPrefabObservable ?? (_ButtonPrefabObservable = new Subject<PropertyChangedEvent<GameObject>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<GameObject>> UIContainerObservable {
            get {
                return _UIContainerObservable ?? (_UIContainerObservable = new Subject<PropertyChangedEvent<GameObject>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Text>> HeaderObservable {
            get {
                return _HeaderObservable ?? (_HeaderObservable = new Subject<PropertyChangedEvent<Text>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Text>> MessageObservable {
            get {
                return _MessageObservable ?? (_MessageObservable = new Subject<PropertyChangedEvent<Text>>());
            }
        }
        
        public Transform ButtonsContainer {
            get {
                return _ButtonsContainer;
            }
            set {
                SetButtonsContainer(value);
            }
        }
        
        public GameObject ButtonPrefab {
            get {
                return _ButtonPrefab;
            }
            set {
                SetButtonPrefab(value);
            }
        }
        
        public GameObject UIContainer {
            get {
                return _UIContainer;
            }
            set {
                SetUIContainer(value);
            }
        }
        
        public Text Header {
            get {
                return _Header;
            }
            set {
                SetHeader(value);
            }
        }
        
        public Text Message {
            get {
                return _Message;
            }
            set {
                SetMessage(value);
            }
        }
        
        public ReactiveCollection<Dialog> DialogQueue {
            get {
                if (_DialogQueueReactive == null) {
                    _DialogQueueReactive = new ReactiveCollection<Dialog>(_DialogQueue ?? new Dialog[] { });
                }
                return _DialogQueueReactive;
            }
        }
        
        public virtual void SetButtonsContainer(Transform value) {
            SetProperty(ref _ButtonsContainer, value, ref _ButtonsContainerEvent, _ButtonsContainerObservable);
        }
        
        public virtual void SetButtonPrefab(GameObject value) {
            SetProperty(ref _ButtonPrefab, value, ref _ButtonPrefabEvent, _ButtonPrefabObservable);
        }
        
        public virtual void SetUIContainer(GameObject value) {
            SetProperty(ref _UIContainer, value, ref _UIContainerEvent, _UIContainerObservable);
        }
        
        public virtual void SetHeader(Text value) {
            SetProperty(ref _Header, value, ref _HeaderEvent, _HeaderObservable);
        }
        
        public virtual void SetMessage(Text value) {
            SetProperty(ref _Message, value, ref _MessageEvent, _MessageObservable);
        }
    }
}
