// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace FlipCube {
    using FlipCube;
    using Invert.Json;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using UniRx;
    using UnityEngine;
    
    
    [uFrame.Attributes.ComponentId(45)]
    [uFrame.Attributes.uFrameIdentifier("bcb74436-fe77-4ec0-abbe-9f1689016138")]
    public partial class SwitchPlate : uFrame.ECS.EcsComponent {
        
        [UnityEngine.SerializeField()]
        private Int32 _GroupNumber;
        
        [UnityEngine.SerializeField()]
        private Boolean _On;
        
        [UnityEngine.SerializeField()]
        private Boolean _StartOn;
        
        [UnityEngine.SerializeField()]
        private SwitchPlatePivot _Pivot;
        
        private Subject<PropertyChangedEvent<Int32>> _GroupNumberObservable;
        
        private PropertyChangedEvent<Int32> _GroupNumberEvent;
        
        private Subject<PropertyChangedEvent<Boolean>> _OnObservable;
        
        private PropertyChangedEvent<Boolean> _OnEvent;
        
        private Subject<PropertyChangedEvent<Boolean>> _StartOnObservable;
        
        private PropertyChangedEvent<Boolean> _StartOnEvent;
        
        private Subject<PropertyChangedEvent<SwitchPlatePivot>> _PivotObservable;
        
        private PropertyChangedEvent<SwitchPlatePivot> _PivotEvent;
        
        public override int ComponentId {
            get {
                return 45;
            }
        }
        
        public IObservable<PropertyChangedEvent<Int32>> GroupNumberObservable {
            get {
                return _GroupNumberObservable ?? (_GroupNumberObservable = new Subject<PropertyChangedEvent<Int32>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Boolean>> OnObservable {
            get {
                return _OnObservable ?? (_OnObservable = new Subject<PropertyChangedEvent<Boolean>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Boolean>> StartOnObservable {
            get {
                return _StartOnObservable ?? (_StartOnObservable = new Subject<PropertyChangedEvent<Boolean>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<SwitchPlatePivot>> PivotObservable {
            get {
                return _PivotObservable ?? (_PivotObservable = new Subject<PropertyChangedEvent<SwitchPlatePivot>>());
            }
        }
        
        public Int32 GroupNumber {
            get {
                return _GroupNumber;
            }
            set {
                SetGroupNumber(value);
            }
        }
        
        public Boolean On {
            get {
                return _On;
            }
            set {
                SetOn(value);
            }
        }
        
        public Boolean StartOn {
            get {
                return _StartOn;
            }
            set {
                SetStartOn(value);
            }
        }
        
        public SwitchPlatePivot Pivot {
            get {
                return _Pivot;
            }
            set {
                SetPivot(value);
            }
        }
        
        public virtual void SetGroupNumber(Int32 value) {
            SetProperty(ref _GroupNumber, value, ref _GroupNumberEvent, _GroupNumberObservable);
        }
        
        public virtual void SetOn(Boolean value) {
            SetProperty(ref _On, value, ref _OnEvent, _OnObservable);
        }
        
        public virtual void SetStartOn(Boolean value) {
            SetProperty(ref _StartOn, value, ref _StartOnEvent, _StartOnObservable);
        }
        
        public virtual void SetPivot(SwitchPlatePivot value) {
            SetProperty(ref _Pivot, value, ref _PivotEvent, _PivotObservable);
        }
    }
}
