// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace FlipCube {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using FlipCube;
    using uFrame.ECS;
    using Invert.Json;
    using UnityEngine;
    using UniRx;
    
    
    [uFrame.Attributes.ComponentId(44)]
    [uFrame.Attributes.uFrameIdentifier("55170ed3-4a31-4c51-ba69-04ebac8f7ab5")]
    public partial class LevelSelectionUI : uFrame.ECS.EcsComponent, uFrame.ECS.IBlackBoardComponent {
        
        [UnityEngine.SerializeField()]
        private Animator _Animator;
        
        [UnityEngine.SerializeField()]
        private Int32 _Skip;
        
        [UnityEngine.SerializeField()]
        private Boolean _Hidden;
        
        [UnityEngine.SerializeField()]
        private LevelSelectionUIItem[] _UIItems;
        
        private ReactiveCollection<LevelSelectionUIItem> _UIItemsReactive;
        
        private Subject<PropertyChangedEvent<Animator>> _AnimatorObservable;
        
        private PropertyChangedEvent<Animator> _AnimatorEvent;
        
        private Subject<PropertyChangedEvent<Int32>> _SkipObservable;
        
        private PropertyChangedEvent<Int32> _SkipEvent;
        
        private Subject<PropertyChangedEvent<Boolean>> _HiddenObservable;
        
        private PropertyChangedEvent<Boolean> _HiddenEvent;
        
        public override int ComponentId {
            get {
                return 44;
            }
        }
        
        public IObservable<PropertyChangedEvent<Animator>> AnimatorObservable {
            get {
                return _AnimatorObservable ?? (_AnimatorObservable = new Subject<PropertyChangedEvent<Animator>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Int32>> SkipObservable {
            get {
                return _SkipObservable ?? (_SkipObservable = new Subject<PropertyChangedEvent<Int32>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Boolean>> HiddenObservable {
            get {
                return _HiddenObservable ?? (_HiddenObservable = new Subject<PropertyChangedEvent<Boolean>>());
            }
        }
        
        public Animator Animator {
            get {
                return _Animator;
            }
            set {
                SetAnimator(value);
            }
        }
        
        public Int32 Skip {
            get {
                return _Skip;
            }
            set {
                SetSkip(value);
            }
        }
        
        public Boolean Hidden {
            get {
                return _Hidden;
            }
            set {
                SetHidden(value);
            }
        }
        
        public ReactiveCollection<LevelSelectionUIItem> UIItems {
            get {
                if (_UIItemsReactive == null) {
                    _UIItemsReactive = new ReactiveCollection<LevelSelectionUIItem>(_UIItems ?? new LevelSelectionUIItem[] { });
                }
                return _UIItemsReactive;
            }
        }
        
        public virtual void SetAnimator(Animator value) {
            SetProperty(ref _Animator, value, ref _AnimatorEvent, _AnimatorObservable);
        }
        
        public virtual void SetSkip(Int32 value) {
            SetProperty(ref _Skip, value, ref _SkipEvent, _SkipObservable);
        }
        
        public virtual void SetHidden(Boolean value) {
            SetProperty(ref _Hidden, value, ref _HiddenEvent, _HiddenObservable);
        }
    }
}
