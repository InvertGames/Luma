// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace FlipCube {
    using Invert.Json;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using UniRx;
    using UnityEngine;
    
    
    [uFrame.Attributes.ComponentId(79)]
    [uFrame.Attributes.uFrameIdentifier("1e5be06a-fd98-48b5-ba59-cbb045c86c3e")]
    public partial class LevelGridUI : uFrame.ECS.EcsComponent {
        
        [UnityEngine.SerializeField()]
        private Int32 _Skip;
        
        [UnityEngine.SerializeField()]
        private Boolean _RequiresUpdate;
        
        [UnityEngine.SerializeField()]
        private LevelGridItemUI[] _LevelGridItems;
        
        private ReactiveCollection<LevelGridItemUI> _LevelGridItemsReactive;
        
        private Subject<PropertyChangedEvent<Int32>> _SkipObservable;
        
        private PropertyChangedEvent<Int32> _SkipEvent;
        
        private Subject<PropertyChangedEvent<Boolean>> _RequiresUpdateObservable;
        
        private PropertyChangedEvent<Boolean> _RequiresUpdateEvent;
        
        public override int ComponentId {
            get {
                return 79;
            }
        }
        
        public IObservable<PropertyChangedEvent<Int32>> SkipObservable {
            get {
                return _SkipObservable ?? (_SkipObservable = new Subject<PropertyChangedEvent<Int32>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Boolean>> RequiresUpdateObservable {
            get {
                return _RequiresUpdateObservable ?? (_RequiresUpdateObservable = new Subject<PropertyChangedEvent<Boolean>>());
            }
        }
        
        public Int32 Skip {
            get {
                return _Skip;
            }
            set {
                SetSkip(value);
            }
        }
        
        public Boolean RequiresUpdate {
            get {
                return _RequiresUpdate;
            }
            set {
                SetRequiresUpdate(value);
            }
        }
        
        public ReactiveCollection<LevelGridItemUI> LevelGridItems {
            get {
                if (_LevelGridItemsReactive == null) {
                    _LevelGridItemsReactive = new ReactiveCollection<LevelGridItemUI>(_LevelGridItems ?? new LevelGridItemUI[] { });
                }
                return _LevelGridItemsReactive;
            }
        }
        
        public virtual void SetSkip(Int32 value) {
            SetProperty(ref _Skip, value, ref _SkipEvent, _SkipObservable);
        }
        
        public virtual void SetRequiresUpdate(Boolean value) {
            SetProperty(ref _RequiresUpdate, value, ref _RequiresUpdateEvent, _RequiresUpdateObservable);
        }
    }
}
