// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace FlipCube {
    using FlipCube;
    using Invert.Json;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using UniRx;
    using UnityEngine;
    
    
    [uFrame.Attributes.ComponentId(95)]
    [uFrame.Attributes.uFrameIdentifier("9b83cf8c-6d50-4b21-9f5d-9728131bbd76")]
    public partial class SceneInstance : uFrame.ECS.EcsComponent {
        
        [UnityEngine.SerializeField()]
        private SceneInstanceState _State;
        
        [UnityEngine.SerializeField()]
        private SceneData _SceneData;
        
        [UnityEngine.SerializeField()]
        private String _SceneDataName;
        
        private Subject<PropertyChangedEvent<SceneInstanceState>> _StateObservable;
        
        private PropertyChangedEvent<SceneInstanceState> _StateEvent;
        
        private Subject<PropertyChangedEvent<SceneData>> _SceneDataObservable;
        
        private PropertyChangedEvent<SceneData> _SceneDataEvent;
        
        private Subject<PropertyChangedEvent<String>> _SceneDataNameObservable;
        
        private PropertyChangedEvent<String> _SceneDataNameEvent;
        
        public override int ComponentId {
            get {
                return 95;
            }
        }
        
        public IObservable<PropertyChangedEvent<SceneInstanceState>> StateObservable {
            get {
                return _StateObservable ?? (_StateObservable = new Subject<PropertyChangedEvent<SceneInstanceState>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<SceneData>> SceneDataObservable {
            get {
                return _SceneDataObservable ?? (_SceneDataObservable = new Subject<PropertyChangedEvent<SceneData>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<String>> SceneDataNameObservable {
            get {
                return _SceneDataNameObservable ?? (_SceneDataNameObservable = new Subject<PropertyChangedEvent<String>>());
            }
        }
        
        public SceneInstanceState State {
            get {
                return _State;
            }
            set {
                SetState(value);
            }
        }
        
        public SceneData SceneData {
            get {
                return _SceneData;
            }
            set {
                SetSceneData(value);
            }
        }
        
        public String SceneDataName {
            get {
                return _SceneDataName;
            }
            set {
                SetSceneDataName(value);
            }
        }
        
        public virtual void SetState(SceneInstanceState value) {
            SetProperty(ref _State, value, ref _StateEvent, _StateObservable);
        }
        
        public virtual void SetSceneData(SceneData value) {
            SetProperty(ref _SceneData, value, ref _SceneDataEvent, _SceneDataObservable);
        }
        
        public virtual void SetSceneDataName(String value) {
            SetProperty(ref _SceneDataName, value, ref _SceneDataNameEvent, _SceneDataNameObservable);
        }
    }
}
