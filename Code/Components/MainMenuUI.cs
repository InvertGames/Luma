// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace FlipCube {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine.UI;
    using uFrame.ECS;
    using UniRx;
    using Invert.Json;
    using UnityEngine;
    
    
    [uFrame.Attributes.ComponentId(31)]
    [uFrame.Attributes.uFrameIdentifier("9584da1d-ccc7-4c75-9b73-e07662ace623")]
    public partial class MainMenuUI : uFrame.ECS.EcsComponent {
        
        [UnityEngine.SerializeField()]
        private Button _PlayButton;
        
        [UnityEngine.SerializeField()]
        private Button _SettingsButton;
        
        [UnityEngine.SerializeField()]
        private Button _QuitButton;
        
        [UnityEngine.SerializeField()]
        private Button _LeaderboardButton;
        
        private Subject<PropertyChangedEvent<Button>> _PlayButtonObservable;
        
        private PropertyChangedEvent<Button> _PlayButtonEvent;
        
        private Subject<PropertyChangedEvent<Button>> _SettingsButtonObservable;
        
        private PropertyChangedEvent<Button> _SettingsButtonEvent;
        
        private Subject<PropertyChangedEvent<Button>> _QuitButtonObservable;
        
        private PropertyChangedEvent<Button> _QuitButtonEvent;
        
        private Subject<PropertyChangedEvent<Button>> _LeaderboardButtonObservable;
        
        private PropertyChangedEvent<Button> _LeaderboardButtonEvent;
        
        public override int ComponentId {
            get {
                return 31;
            }
        }
        
        public IObservable<PropertyChangedEvent<Button>> PlayButtonObservable {
            get {
                return _PlayButtonObservable ?? (_PlayButtonObservable = new Subject<PropertyChangedEvent<Button>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Button>> SettingsButtonObservable {
            get {
                return _SettingsButtonObservable ?? (_SettingsButtonObservable = new Subject<PropertyChangedEvent<Button>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Button>> QuitButtonObservable {
            get {
                return _QuitButtonObservable ?? (_QuitButtonObservable = new Subject<PropertyChangedEvent<Button>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Button>> LeaderboardButtonObservable {
            get {
                return _LeaderboardButtonObservable ?? (_LeaderboardButtonObservable = new Subject<PropertyChangedEvent<Button>>());
            }
        }
        
        public Button PlayButton {
            get {
                return _PlayButton;
            }
            set {
                SetPlayButton(value);
            }
        }
        
        public Button SettingsButton {
            get {
                return _SettingsButton;
            }
            set {
                SetSettingsButton(value);
            }
        }
        
        public Button QuitButton {
            get {
                return _QuitButton;
            }
            set {
                SetQuitButton(value);
            }
        }
        
        public Button LeaderboardButton {
            get {
                return _LeaderboardButton;
            }
            set {
                SetLeaderboardButton(value);
            }
        }
        
        public virtual void SetPlayButton(Button value) {
            SetProperty(ref _PlayButton, value, ref _PlayButtonEvent, _PlayButtonObservable);
        }
        
        public virtual void SetSettingsButton(Button value) {
            SetProperty(ref _SettingsButton, value, ref _SettingsButtonEvent, _SettingsButtonObservable);
        }
        
        public virtual void SetQuitButton(Button value) {
            SetProperty(ref _QuitButton, value, ref _QuitButtonEvent, _QuitButtonObservable);
        }
        
        public virtual void SetLeaderboardButton(Button value) {
            SetProperty(ref _LeaderboardButton, value, ref _LeaderboardButtonEvent, _LeaderboardButtonObservable);
        }
    }
}
