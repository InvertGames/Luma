// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace FlipCube {
    using FlipCube;
    using Invert.Json;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using UniRx;
    using UnityEngine;
    
    
    [uFrame.Attributes.ComponentId(88)]
    [uFrame.Attributes.uFrameIdentifier("6e87cb22-0061-4664-8b64-038b6ae6fedb")]
    public partial class GameUI : uFrame.ECS.EcsComponent, uFrame.ECS.IBlackBoardComponent {
        
        [UnityEngine.SerializeField()]
        private GeneralGameUIState _State;
        
        [UnityEngine.SerializeField()]
        private UIWidget _LoadingScreenWidget;
        
        [UnityEngine.SerializeField()]
        private Boolean _ShowLoadingScreen;
        
        private Subject<PropertyChangedEvent<GeneralGameUIState>> _StateObservable;
        
        private PropertyChangedEvent<GeneralGameUIState> _StateEvent;
        
        private Subject<PropertyChangedEvent<UIWidget>> _LoadingScreenWidgetObservable;
        
        private PropertyChangedEvent<UIWidget> _LoadingScreenWidgetEvent;
        
        private Subject<PropertyChangedEvent<Boolean>> _ShowLoadingScreenObservable;
        
        private PropertyChangedEvent<Boolean> _ShowLoadingScreenEvent;
        
        public override int ComponentId {
            get {
                return 88;
            }
        }
        
        public IObservable<PropertyChangedEvent<GeneralGameUIState>> StateObservable {
            get {
                return _StateObservable ?? (_StateObservable = new Subject<PropertyChangedEvent<GeneralGameUIState>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<UIWidget>> LoadingScreenWidgetObservable {
            get {
                return _LoadingScreenWidgetObservable ?? (_LoadingScreenWidgetObservable = new Subject<PropertyChangedEvent<UIWidget>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Boolean>> ShowLoadingScreenObservable {
            get {
                return _ShowLoadingScreenObservable ?? (_ShowLoadingScreenObservable = new Subject<PropertyChangedEvent<Boolean>>());
            }
        }
        
        public GeneralGameUIState State {
            get {
                return _State;
            }
            set {
                SetState(value);
            }
        }
        
        public UIWidget LoadingScreenWidget {
            get {
                return _LoadingScreenWidget;
            }
            set {
                SetLoadingScreenWidget(value);
            }
        }
        
        public Boolean ShowLoadingScreen {
            get {
                return _ShowLoadingScreen;
            }
            set {
                SetShowLoadingScreen(value);
            }
        }
        
        public virtual void SetState(GeneralGameUIState value) {
            SetProperty(ref _State, value, ref _StateEvent, _StateObservable);
        }
        
        public virtual void SetLoadingScreenWidget(UIWidget value) {
            SetProperty(ref _LoadingScreenWidget, value, ref _LoadingScreenWidgetEvent, _LoadingScreenWidgetObservable);
        }
        
        public virtual void SetShowLoadingScreen(Boolean value) {
            SetProperty(ref _ShowLoadingScreen, value, ref _ShowLoadingScreenEvent, _ShowLoadingScreenObservable);
        }
    }
}
