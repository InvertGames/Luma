// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using Invert.ECS;


public class PlayerDataSystemBase : UnitySystem {
    
    private ComponentManager<PlayerStat> _PlayerStatManager;
    
    public ComponentManager<PlayerStat> PlayerStatManager {
        get {
            return _PlayerStatManager;
        }
        set {
            _PlayerStatManager = value;
        }
    }
    
    public override void Initialize(Invert.ECS.IGame game) {
        base.Initialize(game);
        PlayerStatManager = game.ComponentSystem.RegisterComponent<PlayerStat>();
        game.EventManager.ListenFor( FrameworkEvents.ComponentCreated, ComponentCreated );
        game.EventManager.ListenFor( FrameworkEvents.ComponentDestroyed, ComponentDestroyed );
        game.EventManager.ListenFor( PlayerDataSystemEvents.SaveGame, SaveGame );
        game.EventManager.ListenFor( PlayerDataSystemEvents.PlayerLoggedIn, PlayerLoggedIn );
        game.EventManager.ListenFor( PlayerDataSystemEvents.PlayerLoggedOut, PlayerLoggedOut );
        game.EventManager.ListenFor( PlayerDataSystemEvents.LoadGame, LoadGame );
        game.EventManager.ListenFor( PlayerDataSystemEvents.LoginPlayer, LoginPlayer );
        game.EventManager.ListenFor( PlayerDataSystemEvents.IncrementPlayerStat, IncrementPlayerStat );
        game.EventManager.ListenFor( PlayerDataSystemEvents.DecrementPlayerStat, DecrementPlayerStat );
        game.EventManager.ListenFor( PlayerDataSystemEvents.SetPlayerStat, SetPlayerStat );
        game.EventManager.ListenFor( PlayerDataSystemEvents.LogoutPlayer, LogoutPlayer );
    }
    
    protected virtual void ComponentCreated(Invert.ECS.IEvent e) {
        OnComponentCreated(e);
    }
    
    protected virtual void ComponentDestroyed(Invert.ECS.IEvent e) {
        OnComponentDestroyed(e);
    }
    
    protected virtual void SaveGame(Invert.ECS.IEvent e) {
        OnSaveGame(e);
    }
    
    protected virtual void PlayerLoggedIn(Invert.ECS.IEvent e) {
        OnLoggedIn(e);
    }
    
    protected virtual void PlayerLoggedOut(Invert.ECS.IEvent e) {
        OnLoggedOut(e);
    }
    
    protected virtual void LoadGame(Invert.ECS.IEvent e) {
        OnLoadData(e);
    }
    
    protected virtual void LoginPlayer(Invert.ECS.IEvent e) {
        OnLoginPlayer(e);
    }
    
    protected virtual void IncrementPlayerStat(Invert.ECS.IEvent e) {
        OnIncrementPlayerStat(e);
    }
    
    protected virtual void DecrementPlayerStat(Invert.ECS.IEvent e) {
        OnDecrementPlayerStat(e);
    }
    
    protected virtual void SetPlayerStat(Invert.ECS.IEvent e) {
        OnSetPlayerStat(e);
    }
    
    protected virtual void LogoutPlayer(Invert.ECS.IEvent e) {
        OnLogoutPlayer(e);
    }
    
    protected virtual void OnComponentCreated(Invert.ECS.IEvent e) {
        var eventData = (IComponent)e.Data;
        this.OnComponentCreated(eventData);
    }
    
    protected virtual void OnComponentCreated(IComponent data) {
    }
    
    protected virtual void OnComponentDestroyed(Invert.ECS.IEvent e) {
        var eventData = (IComponent)e.Data;
        this.OnComponentDestroyed(eventData);
    }
    
    protected virtual void OnComponentDestroyed(IComponent data) {
    }
    
    protected virtual void OnSaveGame(Invert.ECS.IEvent e) {
        var eventData = (SaveGameEventData)e.Data;
        this.OnSaveGame(eventData);
    }
    
    protected virtual void OnSaveGame(SaveGameEventData data) {
    }
    
    protected virtual void OnLoggedIn(Invert.ECS.IEvent e) {
        var eventData = (LoginData)e.Data;
        this.OnLoggedIn(eventData);
    }
    
    protected virtual void OnLoggedIn(LoginData data) {
    }
    
    protected virtual void OnLoggedOut(Invert.ECS.IEvent e) {
        var eventData = (LogoutData)e.Data;
        this.OnLoggedOut(eventData);
    }
    
    protected virtual void OnLoggedOut(LogoutData data) {
    }
    
    protected virtual void OnLoadData(Invert.ECS.IEvent e) {
        var eventData = (LoadGameEventData)e.Data;
        this.OnLoadData(eventData);
    }
    
    protected virtual void OnLoadData(LoadGameEventData data) {
    }
    
    protected virtual void OnLoginPlayer(Invert.ECS.IEvent e) {
        var eventData = (LoginPlayerData)e.Data;
        this.OnLoginPlayer(eventData);
    }
    
    protected virtual void OnLoginPlayer(LoginPlayerData data) {
    }
    
    protected virtual void OnIncrementPlayerStat(Invert.ECS.IEvent e) {
        var eventData = (SetPlayerStatData)e.Data;
        this.OnIncrementPlayerStat(eventData);
    }
    
    protected virtual void OnIncrementPlayerStat(SetPlayerStatData data) {
    }
    
    protected virtual void OnDecrementPlayerStat(Invert.ECS.IEvent e) {
        var eventData = (SetPlayerStatData)e.Data;
        this.OnDecrementPlayerStat(eventData);
    }
    
    protected virtual void OnDecrementPlayerStat(SetPlayerStatData data) {
    }
    
    protected virtual void OnSetPlayerStat(Invert.ECS.IEvent e) {
        var eventData = (SetPlayerStatData)e.Data;
        this.OnSetPlayerStat(eventData);
    }
    
    protected virtual void OnSetPlayerStat(SetPlayerStatData data) {
    }
    
    protected virtual void OnLogoutPlayer(Invert.ECS.IEvent e) {
        var eventData = (LogoutData)e.Data;
        this.OnLogoutPlayer(eventData);
    }
    
    protected virtual void OnLogoutPlayer(LogoutData data) {
    }
    
    public virtual void SignalSaveGame(SaveGameEventData data) {
        Game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.SaveGame,data));
    }
    
    public virtual void SignalPlayerLoggedIn(LoginData data) {
        Game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.PlayerLoggedIn,data));
    }
    
    public virtual void SignalPlayerLoggedOut(LogoutData data) {
        Game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.PlayerLoggedOut,data));
    }
    
    public virtual void SignalLoadGame(LoadGameEventData data) {
        Game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.LoadGame,data));
    }
    
    public virtual void SignalLoginPlayer(LoginPlayerData data) {
        Game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.LoginPlayer,data));
    }
    
    public virtual void SignalSetPlayerStat(SetPlayerStatData data) {
        Game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.SetPlayerStat,data));
    }
    
    public virtual void SignalIncrementPlayerStat(SetPlayerStatData data) {
        Game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.IncrementPlayerStat,data));
    }
    
    public virtual void SignalDecrementPlayerStat(SetPlayerStatData data) {
        Game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.DecrementPlayerStat,data));
    }
    
    public virtual void SignalLogoutPlayer(LogoutData data) {
        Game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.LogoutPlayer,data));
    }
    
    public virtual void SignalStatChanged(StatChangedData data) {
        Game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.StatChanged,data));
    }
    
    public virtual void SignalOnSaveComponent(SaveComponentData data) {
        Game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.OnSaveComponent,data));
    }
    
    public static void SignalSaveGame(IGame game, SaveGameEventData data) {
        game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.SaveGame,data));
    }
    
    public static void SignalPlayerLoggedIn(IGame game, LoginData data) {
        game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.PlayerLoggedIn,data));
    }
    
    public static void SignalPlayerLoggedOut(IGame game, LogoutData data) {
        game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.PlayerLoggedOut,data));
    }
    
    public static void SignalLoadGame(IGame game, LoadGameEventData data) {
        game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.LoadGame,data));
    }
    
    public static void SignalLoginPlayer(IGame game, LoginPlayerData data) {
        game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.LoginPlayer,data));
    }
    
    public static void SignalSetPlayerStat(IGame game, SetPlayerStatData data) {
        game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.SetPlayerStat,data));
    }
    
    public static void SignalIncrementPlayerStat(IGame game, SetPlayerStatData data) {
        game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.IncrementPlayerStat,data));
    }
    
    public static void SignalDecrementPlayerStat(IGame game, SetPlayerStatData data) {
        game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.DecrementPlayerStat,data));
    }
    
    public static void SignalLogoutPlayer(IGame game, LogoutData data) {
        game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.LogoutPlayer,data));
    }
    
    public static void SignalStatChanged(IGame game, StatChangedData data) {
        game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.StatChanged,data));
    }
    
    public static void SignalOnSaveComponent(IGame game, SaveComponentData data) {
        game.EventManager.SignalEvent(new EventData(PlayerDataSystemEvents.OnSaveComponent,data));
    }
}

public enum PlayerDataSystemEvents {
    
    SaveGame,
    
    PlayerLoggedIn,
    
    PlayerLoggedOut,
    
    LoadGame,
    
    LoginPlayer,
    
    SetPlayerStat,
    
    IncrementPlayerStat,
    
    DecrementPlayerStat,
    
    LogoutPlayer,
    
    StatChanged,
    
    OnSaveComponent,
}
