// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using Invert.ECS;


public class LevelSystemBase : UnitySystem {
    
    private ComponentManager<Level> _LevelManager;
    
    private ComponentManager<LevelScene> _LevelSceneManager;
    
    public ComponentManager<Level> LevelManager {
        get {
            return _LevelManager;
        }
        set {
            _LevelManager = value;
        }
    }
    
    public ComponentManager<LevelScene> LevelSceneManager {
        get {
            return _LevelSceneManager;
        }
        set {
            _LevelSceneManager = value;
        }
    }
    
    public override void Initialize(Invert.ECS.IGame game) {
        base.Initialize(game);
        LevelManager = game.ComponentSystem.RegisterComponent<Level>();
        LevelSceneManager = game.ComponentSystem.RegisterComponent<LevelScene>();
        game.EventManager.ListenFor( FrameworkEvents.ComponentCreated, ComponentCreated );
    }
    
    protected virtual void ComponentCreated(Invert.ECS.IEvent e) {
    }
    
    public virtual void SignalLevelComplete(LevelEventData data) {
        Game.EventManager.SignalEvent(new EventData(LevelSystemEvents.LevelComplete,data));
    }
    
    public virtual void SignalLevelQuit(LevelEventData data) {
        Game.EventManager.SignalEvent(new EventData(LevelSystemEvents.LevelQuit,data));
    }
    
    public virtual void SignalLevelRestart(LevelEventData data) {
        Game.EventManager.SignalEvent(new EventData(LevelSystemEvents.LevelRestart,data));
    }
    
    public virtual void SignalEnterLevel(EnterLevelEventData data) {
        Game.EventManager.SignalEvent(new EventData(LevelSystemEvents.EnterLevel,data));
    }
    
    public virtual void SignalEnteredLevel(LevelEventData data) {
        Game.EventManager.SignalEvent(new EventData(LevelSystemEvents.EnteredLevel,data));
    }
    
    public static void SignalLevelComplete(IGame game, LevelEventData data) {
        game.EventManager.SignalEvent(new EventData(LevelSystemEvents.LevelComplete,data));
    }
    
    public static void SignalLevelQuit(IGame game, LevelEventData data) {
        game.EventManager.SignalEvent(new EventData(LevelSystemEvents.LevelQuit,data));
    }
    
    public static void SignalLevelRestart(IGame game, LevelEventData data) {
        game.EventManager.SignalEvent(new EventData(LevelSystemEvents.LevelRestart,data));
    }
    
    public static void SignalEnterLevel(IGame game, EnterLevelEventData data) {
        game.EventManager.SignalEvent(new EventData(LevelSystemEvents.EnterLevel,data));
    }
    
    public static void SignalEnteredLevel(IGame game, LevelEventData data) {
        game.EventManager.SignalEvent(new EventData(LevelSystemEvents.EnteredLevel,data));
    }
}

public enum LevelSystemEvents {
    
    LevelComplete,
    
    LevelQuit,
    
    LevelRestart,
    
    EnterLevel,
    
    EnteredLevel,
}
